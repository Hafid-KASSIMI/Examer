package examer.db;


import examer.Settings;
import java.util.ArrayList;
import java.util.HashMap;
import org.sicut.sqlite.Table;

/**
 *
 * Generated by: S2JConverter
 * at 2020-12-24, 16:22:08
 * @author Hafid KASSIMI
 */

public final class Center extends Table {    
    
    private int idCenter;
    private final int dummyIdCenter = 0;
    private int idRegion;
    private String direction;
    private String label;

    public Center() {
        super();
        setDatabase(Settings.DB_PATH);
        name = "Center";
    }

    public Center(int idCenter, String direction, String label, int idRegion) {
        this();
        this.idCenter = idCenter;
        this.idRegion = idRegion;
        this.direction = direction;
        this.label = label;
    }
    
    public Center(int idCenter) {
        this();
        HashMap<String, ArrayList> res = super.select("idCenter='" + idCenter + "'");
        
        this.idCenter = idCenter;
        if ( res.get(res.keySet().iterator().next()).size() > 0 ) {
            
            idRegion = (int) res.get("idRegion").get(0);
            direction = res.get("direction").get(0).toString();
            label = res.get("label").get(0).toString();
        }
        else {
            
            idRegion = 0;
            direction = "";
            label = "";
        }
    }
    
    public ArrayList<Center> list() {
        HashMap<String, ArrayList> res = super.select("idCenter<>" + dummyIdCenter);
        ArrayList<Center> l = new ArrayList();
        for ( int i = 0, n = res.get(res.keySet().iterator().next()).size(); i < n; i++ ) {
            l.add(new Center( 
                    (int) res.get("idCenter").get(i), 
                    res.get("direction").get(i).toString(), res.get("label").get(i).toString(), 
                    (int) res.get("idRegion").get(i)  ) );
        }
        return l;
    }
    
    public boolean delete() {
        return delete2("idCenter=" + idCenter);
    }
    
    public boolean update() {
        
        fv_pairs.put("idCenter", idCenter);
        fv_pairs.put("idRegion", idRegion);
        fv_pairs.put("direction", direction);
        fv_pairs.put("label", label);
        return update2("idCenter=" + idCenter);
    }
    
    public boolean save() {
        
        fv_pairs.put("idCenter", idCenter);
        fv_pairs.put("idRegion", idRegion);
        fv_pairs.put("direction", direction);
        fv_pairs.put("label", label);
        return insert();
    }
    
    
    public int nextIdCenter() {
        HashMap<String, ArrayList> res = super.select(new String[] {"max(idCenter) as idCenter"}, "1");
        try {
            return (int) res.get("idCenter").get(0) + 1;
        }
        catch ( Exception e ) {
            return 1;
        }
    }
    
    public boolean exists() {
        HashMap<String, ArrayList> res = super.select(
                new String[] {"count(*) as n"}, 
                "idRegion='" + idRegion + "' and " + "direction='" + 
                direction + "' and " + "label='" + label + "'");
        int n = 0;
        try {
            n = (int) res.get("n").get(0);
        }
        catch ( Exception e ) { }
        return n > 0;
    }

    public int getIdCenter() {
        return idCenter;
    }

    public void setIdCenter(int idCenter) {
        this.idCenter = idCenter;
    }

    public String getDirection() {
        return direction;
    }

    public void setDirection(String direction) {
        this.direction = direction;
    }

    public String getLabel() {
        return label;
    }

    public void setLabel(String label) {
        this.label = label;
    }

    public int getIdRegion() {
        return idRegion;
    }

    public void setIdRegion(int idRegion) {
        this.idRegion = idRegion;
    }

    public void clone(Center center) {
        this.idCenter = center.getIdCenter();
        this.idRegion = center.getIdRegion();
        this.direction = center.getDirection();
        this.label = center.getLabel();
    }

    @Override
    public String toString() {
        return label;
    }

}