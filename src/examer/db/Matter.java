package examer.db;


import examer.Settings;
import java.util.ArrayList;
import java.util.HashMap;
import org.sicut.sqlite.Table;

/**
 *
 * Generated by: S2JConverter
 * at 2020-12-24, 16:22:08
 * @author Hafid KASSIMI
 */

public final class Matter extends Table {
    
    
    private int idMatter;
    private String label;

    public Matter() {
        super();
        setDatabase(Settings.DB_PATH);
        name = "Matter";
    }
    
    public Matter(int idMatter, String label) {
        this();
        
        this.idMatter = idMatter;
        this.label = label;
    }
    
    public Matter(int idMatter) {
        this();
        HashMap<String, ArrayList> res = super.select("1 and idMatter='" + idMatter + "'");
        
        this.idMatter = idMatter;
        if ( res.get(res.keySet().iterator().next()).size() > 0 ) {
            
            label = res.get("label").get(0).toString();
        }
        else {
            
            label = "";
        }
    }
    
    public ArrayList<Matter> list() {
        HashMap<String, ArrayList> res = super.select();
        ArrayList<Matter> l = new ArrayList();
        for ( int i = 0, n = res.get(res.keySet().iterator().next()).size(); i < n; i++ ) {
            l.add( new Matter( (int) res.get("idMatter").get(i), res.get("label").get(i).toString() ) );
        }
        return l;
    }
    
    public ArrayList<Matter> listBranchPlannedMatters(int idExam, int idBranch) {
        HashMap<String, ArrayList> res = super.select("idMatter in (select idMatter from Plmb where idBranch='" + idBranch + "' and idExam='" + idExam + "')");
        ArrayList<Matter> l = new ArrayList();
        for ( int i = 0, n = res.get(res.keySet().iterator().next()).size(); i < n; i++ ) {
            l.add( new Matter( (int) res.get("idMatter").get(i), res.get("label").get(i).toString() ) );
        }
        return l;
    }
    
    public ArrayList<Matter> listExamPlannedMatters(int idExam) {
        HashMap<String, ArrayList> res = super.select("idMatter in (select idMatter from Plmb where idExam='" + idExam + "')");
        ArrayList<Matter> l = new ArrayList();
        for ( int i = 0, n = res.get(res.keySet().iterator().next()).size(); i < n; i++ ) {
            l.add( new Matter( (int) res.get("idMatter").get(i), res.get("label").get(i).toString() ) );
        }
        return l;
    }
    
    public ArrayList<Matter> listExamTodayMatters(int idExam) {
        HashMap<String, ArrayList> res = super.select("idMatter in (select idMatter from Plmb where idExam='" + idExam + "' and planDate=date('now'))");
        ArrayList<Matter> l = new ArrayList();
        for ( int i = 0, n = res.get(res.keySet().iterator().next()).size(); i < n; i++ ) {
            l.add( new Matter( (int) res.get("idMatter").get(i), res.get("label").get(i).toString() ) );
        }
        return l;
    }
    
    public ArrayList<Matter> listExamCurrentMatters(int idExam) {
        HashMap<String, ArrayList> res = super.select(
                "idMatter in (select idMatter from Plmb p, Plan pl where idExam='" + idExam + "' and "
                + "p.idPlan=pl.idPlan and p.planDate=date('now') and "
                + "pl.startTime<=strftime('%H:%M', time('now')) and time('now') <= "
                + "time(pl.startTime, strftime('%H', time(pl.duration)) || ' hours', "
                + "strftime('%M', time(pl.duration)) || ' minutes'))");
        ArrayList<Matter> l = new ArrayList();
        for ( int i = 0, n = res.get(res.keySet().iterator().next()).size(); i < n; i++ ) {
            l.add( new Matter( (int) res.get("idMatter").get(i), res.get("label").get(i).toString() ) );
        }
        return l;
    }
    
    public boolean delete() {
        return delete2("1 and idMatter='" + idMatter + "'");
    }
    
    public boolean update() {
        
        fv_pairs.put("idMatter", idMatter);
        fv_pairs.put("label", label);
        return update2("1 and idMatter='" + idMatter + "'");
    }
    
    public boolean save() {
        
        fv_pairs.put("idMatter", idMatter);
        fv_pairs.put("label", label);
        return insert();
    }
    
    
    public int nextIdmatter() {
        HashMap<String, ArrayList> res = super.select(new String[] {"max(idMatter) as idMatter"}, "1");
        try {
            return (int) res.get("idMatter").get(0) + 1;
        }
        catch ( Exception e ) {
            return 1;
        }
    }
    
    
    public int count(String matter) {
        HashMap<String, ArrayList> res = super.select(new String[] {"count(idMatter) as n"}, "label like '" + matter + "'");
        try {
            return (int) res.get("n").get(0);
        }
        catch ( Exception e ) {
            return 0;
        }
    }
    
    
    public void setIdmatter(int idMatter) {
        this.idMatter = idMatter;
    }

    public int getIdmatter() {
        return idMatter;
    }
    public void setLabel(String label) {
        this.label = label;
    }

    public String getLabel() {
        return label;
    }

    @Override
    public String toString() {
        return label;
    }

    public void clone(Matter matter) {
        this.idMatter = matter.idMatter;
        this.label = matter.label;
    }
    

}