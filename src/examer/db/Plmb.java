package examer.db;


import examer.Settings;
import java.util.ArrayList;
import java.util.HashMap;
import org.sicut.sqlite.Table;

/**
 *
 * Generated by: S2JConverter
 * at 2020-12-24, 16:22:08
 * @author Hafid KASSIMI
 */

public final class Plmb extends Table {
    
    
    private int idMatter;
    private int idBranch;
    private int idExam;
    private int idPlan;
    private String planDate;

    public Plmb() {
        super();
        setDatabase(Settings.DB_PATH);
        name = "PlMB";
    }
    
    public Plmb(int idMatter, int idBranch, int idExam, int idPlan, String planDate) {
        this();
        
        this.idMatter = idMatter;
        this.idBranch = idBranch;
        this.idExam = idExam;
        this.idPlan = idPlan;
        this.planDate = planDate;
    }
    
    public Plmb(int idMatter, int idBranch, int idExam) {
        this();
        HashMap<String, ArrayList> res = super.select("1 and idMatter='" + idMatter + "' and idBranch='" + idBranch + "' and idExam='" + idExam + "'");
        
        this.idMatter = idMatter;
        this.idBranch = idBranch;
        this.idExam = idExam;
        if ( res.get(res.keySet().iterator().next()).size() > 0 ) {
            
            idPlan = (int) res.get("idPlan").get(0);
            planDate = res.get("planDate").get(0).toString();
        }
        else {
            
            idPlan = -1;
            planDate = "";
        }
    }
    
    public ArrayList<Plmb> list() {
        HashMap<String, ArrayList> res = super.select();
        ArrayList<Plmb> l = new ArrayList();
        for ( int i = 0, n = res.get(res.keySet().iterator().next()).size(); i < n; i++ ) {
            l.add( new Plmb( (int) res.get("idMatter").get(i), (int) res.get("idBranch").get(i), (int) res.get("idExam").get(i), (int) res.get("idPlan").get(i), res.get("planDate").get(0).toString() ) );
        }
        return l;
    }
    
//    public ArrayList<Matter> listExamPosteriorMatters(int idExam, int idMatter) {
//        HashMap<String, ArrayList> res = super.select(
//                "idMatter in (select idMatter from Plmb p, Plan pl where idExam=" + idExam + " and "
//                + "p.idPlan=pl.idPlan and p.planDate=date('now') and "
//                + "pl.startTime<=strftime('%H:%M', time('now')) and time('now') <= "
//                + "time(pl.startTime, strftime('%H', time(pl.duration)) || ' hours', "
//                + "strftime('%M', time(pl.duration)) || ' minutes'))");
//        ArrayList<Matter> l = new ArrayList();
//        for ( int i = 0, n = res.get(res.keySet().iterator().next()).size(); i < n; i++ ) {
//            l.add( new Matter( (int) res.get("idMatter").get(i), res.get("label").get(i).toString() ) );
//        }
//        return l;
//    }
    
    public boolean delete() {
        return delete2("1 and idMatter='" + idMatter + "' and idBranch='" + idBranch + "' and idExam='" + idExam + "'");
    }
    
    public boolean deletePlan() {
        return delete2("idPlan='" + idPlan + "'");
    }
    
    public boolean cleanExamBranch() {
        return delete2("1 and idBranch='" + idBranch + "' and idExam='" + idExam + "'");
    }
    
    public boolean cleanBranch() {
        return delete2("1 and idBranch='" + idBranch + "'");
    }
    
    public boolean cleanBranch(int idBranch) {
        return delete2("1 and idBranch='" + idBranch + "'");
    }
    
    public boolean cleanMatter() {
        return delete2("1 and idMatter='" + idMatter + "' and idExam='" + idExam + "'");
    }
    
    public boolean cleanExam() {
        return delete2("1 and idExam='" + idExam + "'");
    }
    
    public boolean deleteAll(int idExam) {
        return delete2("1 and idExam='" + idExam + "'");
    }
    
    public boolean update() {
        
        fv_pairs.put("idMatter", idMatter);
        fv_pairs.put("idBranch", idBranch);
        fv_pairs.put("idExam", idExam);
        fv_pairs.put("idPlan", idPlan);
        fv_pairs.put("planDate", planDate);
        return update2("1 and idMatter='" + idMatter + "' and idBranch='" + idBranch + "' and idExam='" + idExam + "'");
    }
    
    public boolean save() {
        
        fv_pairs.put("idMatter", idMatter);
        fv_pairs.put("idBranch", idBranch);
        fv_pairs.put("idExam", idExam);
        fv_pairs.put("idPlan", idPlan);
        fv_pairs.put("planDate", planDate);
        return insert();
    }
    
    
    public int count() {
        HashMap<String, ArrayList> res = super.select(new String[] {"count(*) as n"}, "1 and idMatter='" + idMatter + "' and idBranch='" + idBranch + "' and idExam='" + idExam + "'");
        try {
            return (int) res.get("n").get(0);
        }
        catch ( Exception e ) {
            return 0;
        }
    }
    
    public void setIdmatter(int idMatter) {
        this.idMatter = idMatter;
    }

    public int getIdmatter() {
        return idMatter;
    }
    public void setIdbranch(int idBranch) {
        this.idBranch = idBranch;
    }

    public int getIdbranch() {
        return idBranch;
    }
    public void setIdplan(int idPlan) {
        this.idPlan = idPlan;
    }

    public int getIdplan() {
        return idPlan;
    }
    
    public int getReloadedIdPlan() {
        HashMap<String, ArrayList> res = super.select("1 and idMatter='" + idMatter + "' and idBranch='" + idBranch + "' and idExam='" + idExam + "'");
        if ( res.get(res.keySet().iterator().next()).size() > 0 ) {
            idPlan = (int) res.get("idPlan").get(0);
            planDate = res.get("planDate").get(0).toString();
        }
        else {
            idPlan = -1;
            planDate = "";
        }
        return idPlan;
    }
    
    public void setIdexam(int idExam) {
        this.idExam = idExam;
    }

    public int getIdexam() {
        return idExam;
    }
    public void setPlandate(String planDate) {
        this.planDate = planDate;
    }

    public String getPlandate() {
        return planDate;
    }

}